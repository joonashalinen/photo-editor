{"version":3,"sources":["logo.svg","Canvas.js","EffectSlider.js","TextField.js","ToolsMenu.js","Upload.js","Colors.js","PhotoEditor.js","CustomModal.js","App.js","reportWebVitals.js","index.js"],"names":["id","containerId","style","className","width","height","EffectSlider","min","max","defaultValue","title","onChange","TextField","props","marginBottom","marginTop","DeleteOutlined","fontSize","color","cursor","marginLeft","onClick","onDelete","TextArea","onInput","size","React","Component","CustomUpload","accept","action","onUpload","fileList","customRequest","obj","onSuccess","icon","UploadOutlined","Colors","r","g","b","h","s","Math","l","d","hue2rgb","p","q","t","imageData","value","rgb","hsl","arr","data","i","length","this","rgbToHsl","hslToRgb","console","log","PhotoEditor","state","image","numberOfTextFields","showAcceptCancelMenu","imageFilters","contrast","brightness","saturation","colors","activeTransformers","reattachTextAnchorList","imageInstanced","inCropMode","texts","stage","Konva","Stage","container","document","getElementById","clientWidth","clientHeight","layer","Layer","add","firstElementChild","transform","scale","position","konvaReady","ctx","getContext","originalImage","clone","filter","ImageData","Uint8ClampedArray","from","bitmap","saturate","putImageData","applyEffects","buffer","addEventListener","exportImage","Jimp","read","canvas","canvasContainer","parentElement","imageRatio","canvasRatio","originalImageData","currentImageData","file","setTimeout","arrayBuffer","then","setState","catch","err","focusCanvasContainer","text","Text","x","offsetX","y","offsetY","fontFamily","fill","draggable","transformer","Transformer","nodes","rotateAnchorOffset","enabledAnchors","draw","pointerEvents","push","detach","destroy","attachPair","createElement","getChildren","each","textNode","n","visibility","getImageData","drawImage","toCanvas","beforeCropImageData","cropper","Cropper","crop","event","cropData","croppedImageData","croppedCanvas","clearRect","getData","toBlob","blob","a","changeImage","floor","croppedDrawingCanvas","getCroppedCanvas","remove","appendChild","cfd","CanvasFreeDrawing","elementId","backgroundColor","setLineWidth","setStrokeColor","on","selectedTool","removeAllAnchors","downloadCanvas","downloadCtx","readdAllAnchors","filename","toDataURL","replace","lnk","download","href","click","drawingCanvas","konvaCanvas","numberOfTexts","tool","addText","beginDrawing","enableDrawing","beginCrop","endCrop","acceptCrop","updateText","removeAnchors","deleteText","focusTool","acceptedImageTypes","callToolFunction","functionName","args","initKonva","apply","includes","type","removeImageInstance","uploadFileList","showUploadList","showPreviewIcon","top","left","e","src","overflow","map","index","splice","indexOf","forceUpdate","target","_id","CustomModal","showModal","visible","handleOk","handleCancel","eventHub","onOk","onCancel","okButtonProps","okText","children","App","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.328646bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\nimport \"./Canvas.css\";\n\nexport default ({ id, containerId, style }) => {\n\n  return (\n    <div id={containerId} className=\"canvasContainer\" style={style}>\n      <canvas id={ id } width=\"100px\" height=\"100px\" className=\"canvas\"></canvas>\n    </div>\n  )\n\n}\n","import React from \"react\";\nimport { Slider, Switch } from 'antd';\n\nfunction EffectSlider({ min, max, defaultValue, title, onChange }) {\n  return (\n    <>\n      <h5>{title}</h5>\n      <Slider min={min} max={max} onChange={onChange} defaultValue={defaultValue} />\n    </>\n  );\n}\n\nexport default EffectSlider;\n","\nimport {Input} from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\nexport default function TextField(props) {\n\n  return (\n    <div>\n      <h5 style={{marginBottom: \"5px\", marginTop: \"5px\"}}>\n        Text Field\n        <DeleteOutlined style={{fontSize: \"14px\", color: \"#ff7875\", cursor: \"pointer\", marginLeft: \"5px\"}} onClick={props.onDelete}/>\n      </h5>\n      <Input.TextArea onChange={props.onInput} defaultValue={props.defaultValue} size=\"small\" style={{fontSize: \"12px\"}}/>\n    </div>\n  )\n\n}\n","\nimport React from \"react\";\nimport EffectSlider from \"./EffectSlider.js\";\nimport TextField from \"./TextField.js\";\nimport { Input, Button, Tooltip } from \"antd\";\nimport \"./ToolsMenu.css\";\n\nclass ToolsMenu extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfTextFields: 0,\n      showAcceptCancelMenu: false,\n    }\n    this.inCropMode = false;\n    this.texts = [];\n  }\n\n  render() {\n\n    return (\n      <div id={this.props.id} className=\"toolsMenuContainer\">\n        <EffectSlider min={-100} max={100} defaultValue={0} title=\"Contrast\" onChange={(value) => {\n          this.props.callToolFunction(\"contrast\", [value])\n        }}/>\n        <EffectSlider min={-100} max={100} defaultValue={0} title=\"Brightness\" onChange={(value) => {\n          this.props.callToolFunction(\"brightness\", [value])\n        }}/>\n        <EffectSlider min={-100} max={100} defaultValue={0} title=\"Saturation\" onChange={(value) => {\n          this.props.callToolFunction(\"saturate\", [value])\n        }}/>\n        <div className=\"toolIcons\">\n          <Tooltip title=\"Crop\">\n            <div className={`toolIconContainer${this.state.selectedTool === \"crop\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n              if (this.state.selectedTool === \"crop\") return;\n              if (this.state.selectedTool === \"addText\") this.props.callToolFunction(\"removeAllAnchors\", [])\n              this.props.callToolFunction(\"focusTool\", [\"crop\"])\n              this.setState({\n                showAcceptCancelMenu: true,\n                selectedTool: \"crop\",\n                inCropMode: true\n              });\n              this.props.callToolFunction(\"beginCrop\", [])\n            }}>\n              <img className=\"toolIcon\" src=\"crop-alt.svg\" width=\"24px\"></img>\n            </div>\n          </Tooltip>\n          <Tooltip title=\"Add Text\">\n            <div className={`toolIconContainer${this.state.selectedTool === \"addText\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n              if (this.state.selectedTool === \"addText\") return;\n              if (this.state.selectedTool === \"crop\") this.props.callToolFunction(\"endCrop\", [])\n              this.props.callToolFunction(\"readdAllAnchors\", [])\n              this.props.callToolFunction(\"focusTool\", [\"addText\"])\n              this.setState({\n                selectedTool: \"addText\"\n              })\n            }}>\n              <img className=\"toolIcon\" src=\"text.svg\" width=\"24px\"></img>\n            </div>\n          </Tooltip>\n          <Tooltip title=\"Draw\">\n            <div className={`toolIconContainer${this.state.selectedTool === \"draw\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n              if (this.state.selectedTool === \"draw\") return;\n              if (this.state.selectedTool === \"crop\") this.props.callToolFunction(\"endCrop\", [])\n              if (this.state.selectedTool === \"addText\") this.props.callToolFunction(\"removeAllAnchors\", [])\n              this.props.callToolFunction(\"focusTool\", [\"draw\"])\n              this.setState({\n                selectedTool: \"draw\"\n              })\n              this.props.callToolFunction(\"enableDrawing\");\n            }}>\n              <img className=\"toolIcon\" src=\"pen.svg\" height=\"18px\"></img>\n            </div>\n          </Tooltip>\n          {\n            this.state.selectedTool === \"crop\" ?\n              ( <>\n                  <Button onClick={(e) => {\n                    this.props.callToolFunction(\"acceptCrop\", [])\n\n                    this.setState({\n                      selectedTool: \"\",\n                      showAcceptCancelMenu: false\n                    });\n                    this.inCropMode = false;\n                  }} type=\"primary\" className=\"cropAccept\"><img className=\"whiteCheckmark\" src=\"check.svg\" height=\"18px\"></img></Button>\n                  <Button onClick={() => {\n                    this.props.callToolFunction(\"endCrop\", [])\n                    this.setState({\n                      selectedTool: \"\",\n                      showAcceptCancelMenu: false\n                    });\n                    this.inCropMode = false;\n                  }} className=\"cropCancel\">Cancel</Button>\n                </>\n              )\n              :\n              null\n          }\n\n        </div>\n        {\n          this.state.selectedTool === \"addText\" ?\n            <>\n            <Button onClick={() => {\n              var text = this.props.callToolFunction(\"addText\", [])\n              this.texts.push(text);\n              this.setState({\n                numberOfTexts: this.texts.length\n              });\n            }} type=\"dashed\" size=\"small\" style={{fontSize: \"12px\", marginTop: \"10px\"}}>+ New Text Field</Button>\n            <div style={{height: \"87px\", overflow: \"auto\", marginTop: \"5px\"}}>\n              {\n                this.state.numberOfTexts > 0 ?\n                  this.texts.map((text, index) =>\n                    <TextField defaultValue=\"Add Text\" key={text._id} onDelete={() => {\n                      this.props.callToolFunction(\"deleteText\", [text]);\n                      this.texts.splice(this.texts.indexOf(text), 1);\n                      this.setState({\n                        numberOfTexts: this.state.numberOfTexts - 1\n                      });\n                      this.forceUpdate();\n                    }} onInput={(e) => {\n                      this.props.callToolFunction(\"updateText\", [text, e.target.value])\n                    }}/>\n                  )\n                  :\n                  null\n              }\n            </div>\n            </>\n            :\n            null\n        }\n      </div>\n    )\n  }\n\n}\n\nexport default ToolsMenu;\n","import { Upload, message, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\n/*\nconst props = {\n  name: 'file',\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n}; */\n\nexport default function CustomUpload(props) {\n\n  return (\n    <Upload accept={props.accept} action={props.onUpload} fileList={props.fileList ? props.fileList : []} customRequest={(obj) => {\n      obj.onSuccess();\n    }}>\n      <Button icon={<UploadOutlined />}>Select Photo</Button>\n    </Upload>\n  )\n\n}\n","\nimport tinycolor from \"tinycolor2\";\n\nexport default class Colors {\n\n  rgbToHsl(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n\n      h /= 6;\n    }\n\n    return [ h, s, l ];\n  }\n\n  hslToRgb(h, s, l) {\n    var r, g, b;\n\n    if (s == 0) {\n      r = g = b = l; // achromatic\n    } else {\n      function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1/6) return p + (q - p) * 6 * t;\n        if (t < 1/2) return q;\n        if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n      }\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return [ r * 255, g * 255, b * 255 ];\n  }\n\n  saturate(imageData, value) {\n    var arr = imageData.data;\n    var rgb;\n    var hsl;\n    for (var i = 0; i < arr.length; i += 4) {\n      hsl = this.rgbToHsl(arr[i], arr[i + 1], arr[i + 2]);\n      hsl[1] *= value;\n      rgb = this.hslToRgb(hsl[0], hsl[1], hsl[2]);\n      arr[i] = rgb[0];\n      arr[i + 1] = rgb[1];\n      arr[i + 2] = rgb[2];\n    }\n    console.log(\"finished\")\n  }\n\n}\n","\nimport React from \"react\";\nimport Canvas from \"./Canvas.js\";\nimport ToolsMenu from \"./ToolsMenu.js\";\nimport Upload from \"./Upload.js\" ;\nimport Jimp from \"jimp/es\";\nimport Cropper from \"cropperjs\";\nimport Konva from \"konva\";\nimport CanvasFreeDrawing from \"canvas-free-drawing\";\nimport Colors from \"./Colors.js\";\nimport EffectSlider from \"./EffectSlider.js\";\nimport TextField from \"./TextField.js\";\nimport { Input, Button, Tooltip } from \"antd\";\nimport \"./PhotoEditor.css\";\n\nclass PhotoEditor extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: props.image ? props.image : \"\",\n      numberOfTextFields: 0,\n      showAcceptCancelMenu: false,\n    }\n    this.imageFilters = {\n      contrast: 0,\n      brightness: 0,\n      saturation: 0\n    }\n    this.colors = new Colors();\n    this.activeTransformers = [];\n    this.reattachTextAnchorList = [];\n    this.imageInstanced = false;\n\n    this.inCropMode = false;\n    this.texts = [];\n  }\n\n  initKonva() {\n    var stage = new Konva.Stage({\n      container: 'overlayCanvasContainer',\n      width: document.getElementById(\"canvas\").clientWidth,\n      height: document.getElementById(\"canvas\").clientHeight\n    });\n\n    console.log(document.getElementById(\"canvas\").clientWidth)\n\n    var layer = new Konva.Layer();\n\n    stage.add(layer);\n\n    this.layer = layer;\n    this.stage = stage;\n\n    document.getElementById(\"overlayCanvasContainer\").firstElementChild.style.transform = `scale(${this.scale})`;\n    document.getElementById(\"overlayCanvasContainer\").firstElementChild.style.position = `absolute`;\n\n    this.konvaReady = true;\n\n  }\n\n  applyEffects() {\n\n    var canvas = document.getElementById(\"canvas\")\n\n    var ctx = canvas.getContext(\"2d\");\n\n    var image = this.originalImage.clone();\n\n    for (var filter in this.imageFilters) {\n      if (this.imageFilters[filter]) {\n        if (filter === \"saturation\") continue;\n        image[filter](this.imageFilters[filter]);\n      }\n    }\n\n    var imageData = new ImageData(Uint8ClampedArray.from(image.bitmap.data), image.bitmap.width);\n\n    this.colors.saturate(imageData, 1 + this.imageFilters.saturation);\n\n    ctx.putImageData(imageData, 0, 0);\n\n  }\n\n  contrast(value) {\n    this.imageFilters.contrast = value / 100;\n    this.applyEffects();\n  }\n\n  saturate(value) {\n\n    this.imageFilters.saturation = value / 100;\n    this.applyEffects();\n\n    /*\n    var canvas = document.getElementById(\"canvas\");\n\n    var ctx = canvas.getContext(\"2d\");\n\n    var imageData = this.currentImageData;\n\n    var currentValue = this.filterValues.saturation;\n\n    value = 1 + value / 100;\n\n    var ratio = value / currentValue;\n\n    console.log(currentValue, value, ratio)\n\n    this.colors.saturate(imageData, ratio);\n\n    ctx.putImageData(imageData, 0, 0);\n\n    this.filterValues.saturation = currentValue + (value - currentValue); */\n\n  }\n\n  brightness(value) {\n    this.imageFilters.brightness = value / 100;\n    this.applyEffects();\n  }\n\n  async changeImage(buffer) {\n\n    if (!this.imageInstanced) {\n      document.getElementById(\"saveImageButton\").addEventListener(\"click\", () => {\n        this.exportImage();\n      });\n    }\n\n    this.imageInstanced = true;\n\n    console.log(buffer);\n\n    var image = await Jimp.read(buffer);\n\n    var canvas = document.getElementById(\"canvas\");\n\n    canvas.height = image.bitmap.height;\n    canvas.width = image.bitmap.width;\n\n    var ctx = canvas.getContext(\"2d\");\n\n    var canvasContainer = canvas.parentElement;\n\n    var imageRatio = image.bitmap.width / image.bitmap.height;\n    var canvasRatio = canvasContainer.clientWidth / canvasContainer.clientHeight;\n\n    var scale = imageRatio > canvasRatio ?\n      (canvasContainer.clientWidth / image.bitmap.width) : canvasContainer.clientHeight / image.bitmap.height;\n\n    if (canvasContainer.clientWidth >= image.bitmap.width && canvasContainer.clientHeight >= image.bitmap.height) {\n      scale = 1;\n    }\n\n    this.scale = scale;\n\n    canvas.style.transform = `scale(${scale})`;\n\n    var imageData = new ImageData(Uint8ClampedArray.from(image.bitmap.data), image.bitmap.width);\n    ctx.putImageData(imageData, 0, 0);\n\n    this.image = image.clone();\n    this.originalImage = image;\n\n    this.originalImageData = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    )\n\n    this.currentImageData = imageData;\n\n  }\n\n  changeImageFromFile(file) {\n\n    setTimeout(() => {\n      //this.addText();\n    }, 5000)\n\n    file.arrayBuffer().then((buffer) => {\n\n      Jimp.read(buffer).then((image) => {\n\n        var canvas = document.getElementById(\"canvas\");\n\n        canvas.height = image.bitmap.height;\n        canvas.width = image.bitmap.width;\n\n        var ctx = canvas.getContext(\"2d\");\n\n        var canvasContainer = canvas.parentElement;\n\n        var imageRatio = image.bitmap.width / image.bitmap.height;\n        var canvasRatio = canvasContainer.clientWidth / canvasContainer.clientHeight;\n\n        var scale = imageRatio > canvasRatio ?\n          (canvasContainer.clientWidth / image.bitmap.width) : canvasContainer.clientHeight / image.bitmap.height;\n\n        this.scale = scale;\n\n        /*var scale = image.bitmap.width >= canvasContainer.clientWidth ?\n          (canvasContainer.clientWidth / image.bitmap.width) : canvasContainer.clientHeight / image.bitmap.height;*/\n\n        canvas.style.transform = `scale(${scale})`;\n\n        /* image.color([{apply: \"spin\", params: [180]}]) */\n        var imageData = new ImageData(Uint8ClampedArray.from(image.bitmap.data), image.bitmap.width);\n        ctx.putImageData(imageData, 0, 0);\n\n        this.setState({\n          image: image\n        });\n\n      }).catch(err => {\n        console.log(err);\n      });\n\n    }).catch(err => {\n      console.log(err)\n    });\n\n  }\n\n  addText() {\n\n    this.focusCanvasContainer(\"overlayCanvasContainer\")\n\n    var layer = this.layer;\n\n    var text = new Konva.Text({\n      x: this.layer.offsetX(),\n      y: this.layer.offsetY(),\n      text: 'Simple Text',\n      fontSize: 30,\n      fontFamily: 'Impact',\n      fill: '#111',\n      draggable: true\n    });\n\n    layer.add(text);\n\n    var transformer = new Konva.Transformer({\n      nodes: [text],\n      rotateAnchorOffset: 60,\n      enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n    })\n\n    layer.add(transformer);\n\n    text.text(\"Add text\")\n\n    layer.draw();\n\n    document.getElementById(\"overlayCanvasContainer\").style.pointerEvents = \"auto\"\n\n    this.activeTransformers.push(transformer);\n\n    return text;\n  }\n\n  getTexts() {\n    return this.layer.nodes();\n  }\n\n  updateText(text, value) {\n    text.text(value)\n    this.layer.draw();\n  }\n\n  deleteText(text) {\n\n    var [transformer] = this.activeTransformers.filter((transformer) => {\n      var textNode = transformer.nodes()[0];\n      if (textNode === text) return true;\n    });\n\n    transformer.detach();\n\n    text.destroy();\n    this.layer.draw();\n  }\n\n  removeAllAnchors() {\n\n    console.log(\"removing anchors\")\n\n    if (!this.layer || !this.stage) return;\n\n    for (var i = 0; i < this.activeTransformers.length; i++) {\n      this.reattachTextAnchorList.push([this.activeTransformers[i], this.activeTransformers[i].nodes()])\n      this.activeTransformers[i].detach();\n    }\n\n    this.activeTransformers = [];\n\n    this.layer.draw();\n\n  }\n\n  readdAllAnchors() {\n\n    console.log(\"readding anchors\")\n\n    for (var i = 0; i < this.reattachTextAnchorList.length; i++) {\n      var attachPair = this.reattachTextAnchorList[i];\n      attachPair[0].nodes(attachPair[1]);\n      this.activeTransformers.push(attachPair[0]);\n    }\n\n    this.reattachTextAnchorList = [];\n\n    this.layer.draw();\n  }\n\n  cloneKonvaStage() {\n\n    var stage = new Konva.Stage({\n      container: document.createElement(\"div\"),\n      width: document.getElementById(\"canvas\").clientWidth,\n      height: document.getElementById(\"canvas\").clientHeight\n    });\n\n    console.log(document.getElementById(\"canvas\").clientWidth)\n\n    var layer = new Konva.Layer();\n\n    stage.add(layer);\n\n    var textNodes = this.layer.getChildren();\n\n    textNodes.each((textNode, n) => {\n      layer.add(textNode);\n    });\n\n    console.log(stage)\n\n    return stage;\n\n    /*\n    var canvas = document.getElementById(\"overlayCanvasContainer\").firstElementChild.firstElementChild;\n\n    var ctx = canvas.getContext(\"2d\");\n\n    var imageData = ctx.getImageData(0, 0, this.stage.width(), this.stage.height());\n\n    var imageDataCopy = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    )\n\n    var canvasElement = document.createElement(\"canvas\");\n\n    canvasElement.height = imageData.height;\n    canvasElement.width = imageData.width;\n\n    ctx = canvasElement.getContext(\"2d\");\n\n    ctx.putImageData(imageDataCopy, 0, 0);\n\n    return canvasElement; */\n\n  }\n\n  beginCrop() {\n\n    this.focusCanvasContainer(\"canvasContainer\");\n\n    document.getElementById(\"drawingCanvasContainer\").style.visibility = \"hidden\";\n    document.getElementById(\"overlayCanvasContainer\").style.visibility = \"hidden\";\n\n    var canvas = document.getElementById(\"canvas\");\n\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n\n    var imageData = ctx.getImageData(0, 0, canvas.clientWidth, canvas.clientHeight);\n\n    var originalImageData = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    )\n\n    ctx.drawImage(document.getElementById(\"drawingCanvas\"), 0, 0);\n    ctx.drawImage(this.stage.toCanvas(), 0, 0);\n\n    this.beforeCropImageData = originalImageData;\n\n    var cropper = new Cropper(canvas, {\n      crop(event) {\n      },\n    });\n\n    this.cropper = cropper;\n  }\n\n  endCrop() {\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n    ctx.putImageData(this.beforeCropImageData, 0, 0);\n\n    document.getElementById(\"drawingCanvasContainer\").style.visibility = \"visible\";\n    document.getElementById(\"overlayCanvasContainer\").style.visibility = \"visible\";\n\n    this.cropper.destroy();\n  }\n\n  getCroppedCanvas(cropData, id) {\n\n    var canvas = document.getElementById(id);\n\n    var ctx = canvas.getContext(\"2d\");\n\n    var croppedImageData = ctx.getImageData(cropData.x, cropData.y, cropData.width, cropData.height);\n\n    var croppedCanvas = canvas;\n    croppedCanvas.width = cropData.width;\n    croppedCanvas.height = cropData.height;\n    croppedCanvas.id = id;\n\n    ctx = croppedCanvas.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.putImageData(croppedImageData, 0, 0);\n\n    return croppedCanvas;\n  }\n\n  async acceptCrop() {\n\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n    ctx.putImageData(this.beforeCropImageData, 0, 0);\n\n    var cropData = this.cropper.getData();\n    // var croppedCanvas = this.cropper.getCroppedCanvas();\n\n    var croppedImageData = ctx.getImageData(cropData.x, cropData.y, cropData.width, cropData.height);\n\n    var croppedCanvas = document.createElement(\"canvas\");\n    croppedCanvas.width = cropData.width;\n    croppedCanvas.height = cropData.height;\n\n    ctx = croppedCanvas.getContext(\"2d\");\n\n    ctx.putImageData(croppedImageData, 0, 0);\n\n    croppedCanvas.toBlob((blob) => {\n      blob.arrayBuffer().then(async (buffer) => {\n\n        await this.changeImage(buffer);\n\n        this.layer.offsetX(Math.floor(this.layer.offsetX() + cropData.x));\n        this.layer.offsetY(Math.floor(this.layer.offsetY() + cropData.y));\n\n        this.stage.size({\n          width: Math.floor(cropData.width),\n          height: Math.floor(cropData.height)\n        })\n\n        this.layer.draw();\n\n        var croppedDrawingCanvas = this.getCroppedCanvas(cropData, \"drawingCanvas\");\n\n        document.getElementById(\"drawingCanvasContainer\").firstElementChild.remove();\n        document.getElementById(\"drawingCanvasContainer\").appendChild(croppedDrawingCanvas);\n\n        document.getElementById(\"overlayCanvasContainer\").firstElementChild.style.transform = `scale(${this.scale})`;\n        document.getElementById(\"drawingCanvas\").style.transform = `scale(${this.scale})`;\n\n        document.getElementById(\"drawingCanvasContainer\").style.visibility = \"visible\";\n        document.getElementById(\"overlayCanvasContainer\").style.visibility = \"visible\";\n\n        this.cropper.destroy();\n\n      })\n    });\n\n\n\n    /*\n    document.getElementById(\"drawingCanvas\").toBlob((blob) => {\n\n      blob.arrayBuffer().then(async (buffer) => {\n\n        Jimp.read(buffer).then(image => {\n\n          image.crop(Math.round(cropData.x), Math.round(cropData.y), Math.round(cropData.width), Math.round(cropData.height))\n\n          var drawingCanvas = document.getElementById(\"drawingCanvas\");\n\n          var imageData = new ImageData(Uint8ClampedArray.from(image.bitmap.data), image.bitmap.width);\n\n          drawingCanvas.width = image.bitmap.width;\n          drawingCanvas.height = image.bitmap.height;\n\n          var ctx = drawingCanvas.getContext(\"2d\");\n\n          ctx.putImageData(imageData, 0, 0);\n        });\n      });\n    }); */\n  }\n\n  enableDrawing() {\n\n    this.focusCanvasContainer(\"drawingCanvasContainer\");\n\n    if (this.cfd) {\n      return;\n    }\n\n    const cfd = new CanvasFreeDrawing({\n      elementId: 'drawingCanvas',\n      width: document.getElementById(\"canvas\").clientWidth,\n      height: document.getElementById(\"canvas\").clientHeight,\n      backgroundColor: [0,0,0,0]\n    });\n\n    cfd.setLineWidth(3);\n    cfd.setStrokeColor([11, 11, 11]);\n\n    cfd.on({ event: 'redraw' }, () => {\n\n    });\n\n    this.cfd = cfd;\n\n    document.getElementById(\"drawingCanvas\").style.transform = `scale(${this.scale})`;\n\n  }\n\n  disableDrawing() {\n\n  }\n\n  focusCanvasContainer(id) {\n    document.getElementById(\"canvasContainer\").style.pointerEvents = id === \"canvasContainer\" ? \"auto\" : \"none\";\n    document.getElementById(\"drawingCanvasContainer\").style.pointerEvents = id === \"drawingCanvasContainer\" ? \"auto\" : \"none\";\n    document.getElementById(\"overlayCanvasContainer\").style.pointerEvents = id === \"overlayCanvasContainer\" ? \"auto\" : \"none\";\n  }\n\n  exportImage() {\n\n    console.log(this.state.selectedTool)\n\n    if (this.state.selectedTool === \"addText\") this.removeAllAnchors();\n\n    var canvas = document.getElementById(\"canvas\");\n\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n\n    var imageData = ctx.getImageData(0, 0, canvas.clientWidth, canvas.clientHeight);\n\n    var originalImageData = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    )\n\n    var downloadCanvas = document.createElement(\"canvas\");\n    downloadCanvas.width = canvas.width;\n    downloadCanvas.height = canvas.height;\n\n    var downloadCtx = downloadCanvas.getContext(\"2d\");\n\n    downloadCtx.putImageData(imageData, 0, 0);\n\n    downloadCtx.drawImage(document.getElementById(\"drawingCanvas\"), 0, 0);\n    if (this.stage) downloadCtx.drawImage(this.stage.toCanvas(), 0, 0);\n\n    if (this.state.selectedTool === \"addText\") this.readdAllAnchors();\n\n    download(downloadCanvas, \"image.png\")\n\n    function download(canvas, filename) {\n\n      var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n\n      var lnk = document.createElement('a');\n      lnk.download = filename;\n\n      lnk.href = canvas.toDataURL(\"image/png;base64\");\n\n      lnk.click();\n\n    }\n  }\n\n  removeImageInstance() {\n\n    if (!this.imageInstanced) return;\n\n    var canvas = document.getElementById(\"canvas\");\n    var drawingCanvas = document.getElementById(\"drawingCanvas\");\n    var konvaCanvas = document.getElementById(\"overlayCanvasContainer\").firstElementChild.firstElementChild;\n\n    var ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    ctx = drawingCanvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    ctx = konvaCanvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (this.konvaReady) {\n      document.getElementById(\"overlayCanvasContainer\").firstElementChild.remove();\n\n      this.stage = false;\n      this.layer = false;\n      this.konvaReady = false;\n\n    }\n\n    this.cfd = false;\n\n    this.texts = [];\n    this.setState({\n      numberOfTexts: 0\n    })\n  }\n\n  focusTool(tool) {\n    var toolContainers = {\n      crop: \"canvasContainer\",\n      addText:\"overlayCanvasContainer\",\n      draw: \"drawingCanvasContainer\"\n    }\n    this.focusCanvasContainer(toolContainers[tool]);\n  }\n\n  render() {\n\n    setTimeout(() => {\n      console.log(\"asdd\");\n    }, 5000)\n\n    var toolFunctions = {\n      beginDrawing: this.beginDrawing,\n      enableDrawing: this.enableDrawing,\n      beginCrop: this.beginCrop,\n      endCrop: this.endCrop,\n      acceptCrop: this.acceptCrop,\n      addText: this.addText,\n      updateText: this.updateText,\n      exportImage: this.exportImage,\n      contrast: this.contrast,\n      brightness: this.brightness,\n      saturate: this.saturate,\n      removeAnchors: this.removeAnchors,\n      removeAllAnchors: this.removeAllAnchors,\n      deleteText: this.deleteText,\n      focusTool: this.focusTool\n    }\n\n    var acceptedImageTypes = [\n      \"image/png\",\n      \"image/jpeg\",\n      \"image/jpg\",\n      \"image/svg\",\n      \"x-icon/svg\",\n      \"image/tiff\",\n      \"image/bmp\",\n      \"image/gif\"\n    ]\n\n    var callToolFunction = (functionName, args) => {\n      if (!this.konvaReady) this.initKonva();\n      return this[functionName].apply(this, args);\n    }\n\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"upperRow\">\n          <Upload onUpload={(file) => {\n            if (!acceptedImageTypes.includes(file.type)) return;\n            this.removeImageInstance();\n            file.arrayBuffer().then(buffer => {\n              this.changeImage(buffer);\n            });\n            this.setState({\n              uploadFileList: []\n            })\n          }}\n          accept=\"image/png,image/jpeg,image/jpg\"\n          showUploadList={{showPreviewIcon: false}}\n          fileList={this.state.uploadFileList}/>\n        </div>\n        <div className=\"canvasTools\">\n          <Canvas id=\"canvas\" containerId=\"canvasContainer\"/>\n          <Canvas id=\"drawingCanvas\" containerId=\"drawingCanvasContainer\" style={{ position: \"absolute\", top: 0, left: 0, backgroundColor: \"transparent\", pointerEvents: \"none\" }}/>\n          <Canvas id=\"overlayCanvas\" containerId=\"overlayCanvasContainer\" style={{ position: \"absolute\", top: 0, left: 0, backgroundColor: \"transparent\", pointerEvents: \"none\" }}/>\n          <div id=\"tools\" className=\"toolsMenuContainer\">\n            <EffectSlider min={-100} max={100} defaultValue={0} title=\"Contrast\" onChange={(value) => {\n              callToolFunction(\"contrast\", [value])\n            }}/>\n            <EffectSlider min={-100} max={100} defaultValue={0} title=\"Brightness\" onChange={(value) => {\n              callToolFunction(\"brightness\", [value])\n            }}/>\n            <EffectSlider min={-100} max={100} defaultValue={0} title=\"Saturation\" onChange={(value) => {\n              callToolFunction(\"saturate\", [value])\n            }}/>\n            <div className=\"toolIcons\">\n              <Tooltip title=\"Crop\">\n                <div className={`toolIconContainer${this.state.selectedTool === \"crop\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n                  if (this.state.selectedTool === \"crop\") return;\n                  if (this.state.selectedTool === \"addText\") callToolFunction(\"removeAllAnchors\", [])\n                  callToolFunction(\"focusTool\", [\"crop\"])\n                  this.setState({\n                    showAcceptCancelMenu: true,\n                    selectedTool: \"crop\",\n                    inCropMode: true\n                  });\n                  callToolFunction(\"beginCrop\", [])\n                }}>\n                  <img className=\"toolIcon\" src=\"crop-alt.svg\" width=\"24px\"></img>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Add Text\">\n                <div className={`toolIconContainer${this.state.selectedTool === \"addText\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n                  if (this.state.selectedTool === \"addText\") return;\n                  if (this.state.selectedTool === \"crop\") callToolFunction(\"endCrop\", [])\n                  callToolFunction(\"readdAllAnchors\", [])\n                  callToolFunction(\"focusTool\", [\"addText\"])\n                  this.setState({\n                    selectedTool: \"addText\"\n                  })\n                }}>\n                  <img className=\"toolIcon\" src=\"text.svg\" width=\"24px\"></img>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Draw\">\n                <div className={`toolIconContainer${this.state.selectedTool === \"draw\" ? \" toolIconContainerSelected\" : \"\"}`} onClick={(e) => {\n                  if (this.state.selectedTool === \"draw\") return;\n                  if (this.state.selectedTool === \"crop\") callToolFunction(\"endCrop\", [])\n                  if (this.state.selectedTool === \"addText\") callToolFunction(\"removeAllAnchors\", [])\n                  callToolFunction(\"focusTool\", [\"draw\"])\n                  this.setState({\n                    selectedTool: \"draw\"\n                  })\n                  callToolFunction(\"enableDrawing\");\n                }}>\n                  <img className=\"toolIcon\" src=\"pen.svg\" height=\"18px\"></img>\n                </div>\n              </Tooltip>\n              {\n                this.state.selectedTool === \"crop\" ?\n                  ( <>\n                      <Button onClick={(e) => {\n                        callToolFunction(\"acceptCrop\", [])\n\n                        this.setState({\n                          selectedTool: \"\",\n                          showAcceptCancelMenu: false\n                        });\n                        this.inCropMode = false;\n                      }} type=\"primary\" className=\"cropAccept\"><img className=\"whiteCheckmark\" src=\"check.svg\" height=\"18px\"></img></Button>\n                      <Button onClick={() => {\n                        callToolFunction(\"endCrop\", [])\n                        this.setState({\n                          selectedTool: \"\",\n                          showAcceptCancelMenu: false\n                        });\n                        this.inCropMode = false;\n                      }} className=\"cropCancel\">Cancel</Button>\n                    </>\n                  )\n                  :\n                  null\n              }\n\n            </div>\n            {\n              this.state.selectedTool === \"addText\" ?\n                <>\n                <Button onClick={() => {\n                  var text = callToolFunction(\"addText\", [])\n                  this.texts.push(text);\n                  this.setState({\n                    numberOfTexts: this.texts.length\n                  });\n                }} type=\"dashed\" size=\"small\" style={{fontSize: \"12px\", marginTop: \"10px\"}}>+ New Text Field</Button>\n                <div style={{height: \"87px\", overflow: \"auto\", marginTop: \"5px\"}}>\n                  {\n                    this.state.numberOfTexts > 0 ?\n                      this.texts.map((text, index) =>\n                        <TextField defaultValue=\"Add Text\" key={text._id} onDelete={() => {\n                          callToolFunction(\"deleteText\", [text]);\n                          this.texts.splice(this.texts.indexOf(text), 1);\n                          this.setState({\n                            numberOfTexts: this.state.numberOfTexts - 1\n                          });\n                          this.forceUpdate();\n                        }} onInput={(e) => {\n                          callToolFunction(\"updateText\", [text, e.target.value])\n                        }}/>\n                      )\n                      :\n                      null\n                  }\n                </div>\n                </>\n                :\n                null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PhotoEditor;\n","\nimport React from \"react\";\nimport { Modal, Button } from 'antd';\n\nclass CustomModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { visible: true };\n    this.eventHub = props.eventHub;\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    /* this.setState({\n      visible: false,\n    }); */\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Open Photo Editor\n        </Button>\n        <Modal\n          title={this.props.title}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okButtonProps={{id: \"saveImageButton\"}}\n          okText=\"Save\"\n        >\n          {this.props.children}\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default CustomModal\n","import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport PhotoEditor from \"./PhotoEditor.js\"\nimport CustomModal from \"./CustomModal.js\";\nimport 'cropperjs/dist/cropper.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div class=\"modalButtonContainer\">\n        <CustomModal title=\"Photo Editor\">\n          <PhotoEditor/>\n        </CustomModal>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}